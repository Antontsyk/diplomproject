<script>

    function selectCategoty(id) {
        switch (Number(id)) {
            case 1: return 'Информационные технологии'
                break;
            case 2: return 'Авто. Мото'
                break;
            case 3: return 'Бытовые услуги'
                break;
            case 4: return 'Еда'
                break;
            case 5: return 'Здоровье и спорт'
                break;
            case 6: return 'Интерьер'
                break;
            case 7: return 'Коммерция'
                break;
            case 8: return 'Культура'
                break;
            case 9: return 'Логистика'
                break;
            case 10: return 'Мода и стиль'
                break;
            case 11: return 'Ноухау'
                break;
            case 12: return 'Образование'
                break;
            case 13: return 'Промышленное производство'
                break;
            case 14: return 'Развлечения. Отдых'
                break;
            case 15: return 'Сельское хозяйство'
                break;
            case 16: return 'Социальные проекты'
                break;
            case 17: return 'Строительство'
                break;
            case 18: return 'Туризм'
                break;
            case 19: return 'Финансы'
                break;
            case 20: return 'Экология'
                break;
            default: return 'NOT'
        }
    }
    // This example requires the Places library. Include the libraries=places
    // parameter when you first load the API. For example:
    // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
    var locations = [];
    <% if (user != null) { %>
    <% } %>
    var All_locations = [
        <% for( var i = 0; i < users.length; i++){  %>
        <% for( var j=0; j < users[i].local.locations.length; j++) {  %>
        {
            name: '<%= users[i].local.locations[j].name %>',
            place: {
                lat: <%= users[i].local.locations[j].place.lat %>,
                lng: <%= users[i].local.locations[j].place.lng %>
            },
            category: <%= users[i].local.locations[j].category %>
        },
        <% }%>
        <% }%>
    ];
    //var locations = JSON.parse(localStorage.pos);
    var map;

    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
            center: {lat: 53.9085624, lng: 27.548442199999954},
            zoom: 6,
            scrollwheel: false,
        });

        var input = /** @type {!HTMLInputElement} */(
            document.getElementById('pac-input'));

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);

        var infowindow = new google.maps.InfoWindow();
        var marker = new google.maps.Marker({
            map: map,
            anchorPoint: new google.maps.Point(0, -29)
        });

        autocomplete.addListener('place_changed', function() {
            infowindow.close();
            marker.setVisible(false);
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            marker.setIcon(/** @type {google.maps.Icon} */({
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(17, 34),
                scaledSize: new google.maps.Size(35, 35)
            }));
            marker.setPosition(place.geometry.location);
            marker.setVisible(true);

            var address = '';
            //var location = JSON.parse(localStorage.pos);

            if (place.address_components) {
                address = [
                    (place.address_components[0] && place.address_components[0].short_name || ''),
                    (place.address_components[1] && place.address_components[1].short_name || ''),
                    (place.address_components[2] && place.address_components[2].short_name || '')
                ].join(' ');
                //location.push(place)
                //document.getElementById('location_map').value = address;
                document.getElementById('location_place_lat').value = place.geometry.location.lat();
                document.getElementById('location_place_lng').value = place.geometry.location.lng();

                //localStorage.setItem('pos', JSON.stringify(location) );
            }

            infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
            infowindow.open(map, marker);
        });

        // Sets a listener on a radio button to change the filter type on Places
    }
    initMap();

    var infoWindow = new google.maps.InfoWindow();

    function addMarker(location, category) {
        var marker = new google.maps.Marker({
            position: location,
            label: selectCategoty(category),
            map: map
        });
        google.maps.event.addListener(marker, 'click', (function(marker) {
            return function() {
                infoWindow.setContent(selectCategoty(category));
                infoWindow.open(map, marker);
            }
        })(marker))
        markers.push(marker);
    }

    function createContent( obj ){
        var contentString = '<div id="content">'+
            '<div id="siteNotice">'+
            '</div>'+
            '<h1 id="firstHeading" class="firstHeading">Название: '+obj.name+'</h1>'+
            '<h2>Категория: '+selectCategoty(obj.category)+'</h2>'+
            '</div>';
        return contentString;
    }

    var markers = All_locations.map(function( position , i) {
        return new google.maps.Marker({
            position: position.place,
            label: position.name
        });
    });

    markers.map(function ( marker, i ) {
        google.maps.event.addListener(marker, 'click', (function(marker, i) {
            return function() {
                infoWindow.setContent(createContent(All_locations[i]));
                infoWindow.open(map, marker);
            }
        })(marker, i));
    });

    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }

    // Add a marker clusterer to manage the markers.
    var markerCluster = new MarkerClusterer(map, markers,
        {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
</script>